ViSizer：一个可视化缩放框架。（ViSizer: A Visualization Resizing Framework）

计算机软件在设计的时候，必须要考虑的一个问题是不同分辨率下的显示。例如在网页的设计上，移动端和PC端一般有两套不同的界面设计。可视化软件也同样如此。现如今随着移动设备的普及，大分辨率显示设备的问世，可视化显示设计也面临更多挑战。
设想下如下场景：在多人合作可视分析时， 人们使用不同大小， 不同比例的显示设备；  面对大屏幕显示墙， 用户手持移动终端进行交互， 操纵可视组件； 同一个设计师， 在不同的场所使用不同分辨率的多种计算设备来工作。
这时一个可视化缩放框架就显得非常有必要了，来自 Kuangliu Ma 研究组的这个工作[1]， 能将不同分辨率下的不同显示问题独立出来予以解决， 减轻可视化软件的开发和设计工作。
他们开发了一个基于感知的框架，ViSier, 能将可视化结果缩放以适应任何尺寸的显示。

框架的具体工作流程如图1， 原始可视化的结果作为数据输入，  从中提取出每个像素的可视复杂度和兴趣度，用这两张“地图”合成出重要度图。达到好的缩放效果的关键就是要保持好单位面积的重要度， 牺牲掉重要度几乎为零的区域。 也就是说， 在缩放过程中尽量压缩不重要的空白区域， 来保留我们识别出的重要区域的原貌。得到重要度“地图”之后， 基于像素的重要度对整个显示图像做非均匀分割。 具体算法中， 使用平面四叉树的四叉树可以得到比较好的效果。 在分割后的网格上附加能量函数形式的限制条件， 把缩放问题转化成非线性最小二乘法问题， 最后使用迭代算法，一步步调整网格，得出一个较优解，也就得到了最后的缩放结果。


